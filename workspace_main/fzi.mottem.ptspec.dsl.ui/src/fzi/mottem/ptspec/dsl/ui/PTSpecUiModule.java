/*
 * generated by Xtext
 */
package fzi.mottem.ptspec.dsl.ui;

import org.eclipse.core.runtime.Platform;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.documentation.IEObjectDocumentationProvider;
import org.eclipse.xtext.ui.editor.contentassist.IContentProposalProvider;
import org.eclipse.xtext.ui.editor.hover.IEObjectHoverProvider;
import org.eclipse.xtext.ui.editor.hover.html.XtextElementLinks;
import org.eclipse.xtext.ui.editor.hyperlinking.IHyperlinkHelper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.osgi.framework.Bundle;

import fzi.mottem.ptspec.dsl.ui.contentassist.PTSpecJavaTypeProposalProvider;
import fzi.mottem.ptspec.dsl.ui.contentassist.PTSpecProposalProvider;
import fzi.mottem.ptspec.dsl.ui.highlighting.PTSpecAntlrTokenToAttributeIdMapper;
import fzi.mottem.ptspec.dsl.ui.highlighting.PTSpecHighlightingCalculator;
import fzi.mottem.ptspec.dsl.ui.highlighting.PTSpecHighlightingConfiguration;
import fzi.mottem.ptspec.dsl.ui.hovering.PTSpecEObjectDocumentationProvider;
import fzi.mottem.ptspec.dsl.ui.hovering.PTSpecEObjectHoverProvider;
import fzi.mottem.ptspec.dsl.ui.hyperlinking.PTSpecCodeModelHyperlinkFactory;
import fzi.mottem.ptspec.dsl.ui.hyperlinking.PTSpecHyperlinkHelper;

/**
 * Use this class to register components to be used within the IDE.
 */
public class PTSpecUiModule extends AbstractPTSpecUiModule
{
	public static final String PLUGIN_ID = "fzi.mottem.ptspec.dsl.ui";
	
	public static final Bundle PLUGIN_BUNDLE = Platform.getBundle(PLUGIN_ID);
	
	public PTSpecUiModule(AbstractUIPlugin plugin)
	{
		super(plugin);
	}
	
	// for custom proposal provider
	@Override
	public Class<? extends IContentProposalProvider> bindIContentProposalProvider()
	{
		return PTSpecProposalProvider.class;
	}

	// for custom highlighting configuration
	public Class<? extends IHighlightingConfiguration> bindSemanticConfig()
	{
	    return PTSpecHighlightingConfiguration.class;
	}

	// for custom lexical highlighting calculation
	public Class<? extends AbstractAntlrTokenToAttributeIdMapper> bindAntlrTokenToAttributeIdMapper()
	{
		return PTSpecAntlrTokenToAttributeIdMapper.class;
	}
	
	// for custom semantic highlighting calculation
	public Class<? extends ISemanticHighlightingCalculator> bindSemanticHighlightingCalculator()
	{
	    return PTSpecHighlightingCalculator.class;
	}
	
	// for custom hovering
    public Class<? extends IEObjectHoverProvider> bindIEObjectHoverProvider()
    {
        return PTSpecEObjectHoverProvider.class;
    }
 
	// for custom hovering
    public Class<? extends IEObjectDocumentationProvider> bindIEObjectDocumentationProviderr()
    {
        return PTSpecEObjectDocumentationProvider.class;
    }
	
    // for custom java proposals
    public Class<? extends PTSpecJavaTypeProposalProvider> bindPTSpecJavaProposalProviderr()
    {
        return PTSpecJavaTypeProposalProvider.class;
    }

 // for custom hyperlinking to C/C++ files
    @Override
	public Class<? extends IHyperlinkHelper> bindIHyperlinkHelper()
	{
		return PTSpecHyperlinkHelper.class;
	}

    // for custom hyperlinking to C/C++ files
    public Class<? extends PTSpecCodeModelHyperlinkFactory> bindPTSpecCodeModelHyperlinkFactory()
    {
    	return PTSpecCodeModelHyperlinkFactory.class;
    }

    // for custom project wizard
	// formerly contributed by org.eclipse.xtext.ui.generator.projectWizard.SimpleProjectWizardFragment
	public Class<? extends org.eclipse.xtext.ui.wizard.IProjectCreator> bindIProjectCreator() {
		return fzi.mottem.ptspec.dsl.ui.wizard.PTSpecProjectCreator.class;
	}

	public Class<? extends XtextElementLinks> bindPTSpecElementLinks()
	{
		return fzi.mottem.ptspec.dsl.ui.hovering.PTSpecElementLinks.class;
	}

}
